name: build

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request: { }
  schedule:
  - cron: '43 6 * * *'
  workflow_dispatch: { }

defaults:
  run:
    shell: bash

env:
  GRADLE_OPTS: -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4 -Dorg.gradle.warning.mode=all -Dsun.net.client.defaultConnectTimeout=15000 -Dsun.net.client.defaultReadTimeout=600000 -Dsun.io.useCanonCaches=false -Djava.awt.headless=true -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false

jobs:
  populate-cache:
    if: ${{
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      || (github.event_name == 'push' && !startsWith(github.event.head_commit.message, '[skip ci]') && !startsWith(github.event.head_commit.message, '[push-back]'))
      || github.event_name != 'push'
      }}
    name: Populate cache
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1
    - name: Cache
      id: cache
      uses: actions/cache@v2
      with:
        key: ${{runner.os}}-gradle-${{hashFiles('gradle/wrapper/**', '**/*.gradle')}}
        path: |
          ~/.gradle
    - name: Setup Java 11
      if: ${{steps.cache.outputs.cache-hit != 'true'}}
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: zulu
    - name: Create cache content
      if: ${{steps.cache.outputs.cache-hit != 'true'}}
      run: |
        ./retry ./gradlew downloadDependencies

  build:
    needs:
    - populate-cache
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      gradle-versions: ${{steps.gradle-versions.outputs.stableMinorAndLatestUnstable}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 2
    - name: Cache
      uses: actions/cache@v2
      with:
        key: ${{runner.os}}-gradle-${{hashFiles('gradle/**', '**/*.gradle')}}
        path: |
          ~/.gradle
    - name: Setup Java 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: zulu
    - name: Compile classes
      run: |
        ./gradlew allClasses
        echo "DISABLE_COMPILATION=true" >> $GITHUB_ENV
    - name: Build
      run: |
        ./gradlew build -Pdisable-test=true
    - name: Archive workspace
      run: |
        tar -czf "/tmp/workspace-${{github.run_id}}.tar.gz" "${{github.workspace}}"
    - name: Upload workspace archive
      uses: actions/upload-artifact@v2
      with:
        name: workspace
        path: '/tmp/workspace-${{github.run_id}}.tar.gz'
        if-no-files-found: error
    - name: Read min supported Gradle version
      id: min-gradle-version
      uses: christian-draeger/read-properties@1.0.1
      with:
        path: './gradle.properties'
        property: 'gradle-api.min-version'
    - name: Retrieve Gradle versions
      id: gradle-versions
      uses: remal-github-actions/retrieve-maven-artifact-versions@v1
      with:
        group: name.remal.gradle-api
        name: gradle-api
        repository: https://maven.pkg.github.com/remal-gradle-api/packages
        user: ${{github.actor}}
        password: ${{github.token}}
        min: ${{steps.min-gradle-version.outputs.value}}

  cross-versions-test:
    needs:
    - build
    name: Cross Gradle versions test
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      DISABLE_COMPILATION: 'true'
    strategy:
      matrix:
        gradle-version: ${{fromJSON(needs.build.outputs.gradle-versions)}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 1
    - name: Cache
      uses: actions/cache@v2
      with:
        key: ${{runner.os}}-gradle-${{hashFiles('gradle/**', '**/*.gradle')}}
        path: |
          ~/.gradle
    - name: Setup Java 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: zulu
    - name: Download workspace archive
      id: download-workspace
      uses: actions/download-artifact@v2
      with:
        name: workspace
        path: /tmp
    - name: Unarchive workspace
      run: |
        tar -xzf "${{steps.download-workspace.outputs.download-path}}/workspace-${{github.run_id}}.tar.gz"
    - name: Execute tests
      run: |
        ./gradlew allTests "-Pgradle-api.version=${{matrix.gradle-version}}"
